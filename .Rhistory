as.factor(c("normal","tumor"))
sample.types <- as.factor(c("normal","tumor"))
class(sample.types)
help(as.factor)
as.factor(c("normal","normal","tumor","tumor"),levels=c("normal","tumor"))
as.factor(c("normal","normal","tumor","tumor"),level=c("normal","tumor"))
factor(c("normal","normal","tumor","tumor"),levels=c("normal","tumor"))
factor(c("normal","normal","tumor","tumor"))
factor(c("normal","normal","tumor","tumor"),levels=c("normal","tumor"))
factor(c("normal","normal","cancer","cancer"))
as.numeric(factor(c("normal","normal","cancer","cancer")))
as.numeric(factor(c("normal","normal","cancer","cancer")))
help(relevel)
as.numeric(factor(c("normal","normal","cancer","cancer")))
factor(c("normal","normal","cancer","cancer"))
factor(c("normal","normal","cancer","cancer"))
factor(c("normal","normal","cancer","cancer"))
as.numeric(factor(c("normal","normal","cancer","cancer")))
sample.labels <- c("normal","normal","cancer","cancer")
factor(sample.labels)
as.numeric(factor(sample.labels))
factor(c("normal","normal","cancer","cancer"),levels=c("normal","cancer"))
factor(sample.labels,levels=c("normal","cancer"))
as.numeric(factor(sample.labels,levels=c("normal","cancer")))
sample.labels.factor <- factor(sample.labels)
sample.labels.factor
relevel(sample.labels.factor,ref="normal")
help(reorder)
reorder(sample.labels.factor, new.order=c("normal","cancer"))
reorder(sample.labels.factor,c("normal","cancer"))
help(glm)
logit
glm
library(glm)
help(glm)
rnorm(10)
rnorm(10)
0.5*rnorm(10),-rnorm(10),2*rnorm(10)
cbind(0.5*rnorm(10),-rnorm(10),2*rnorm(10))
as.data.frame(cbind(0.5*rnorm(10),-rnorm(10),2*rnorm(10)))
data.simulated <- as.data.frame(cbind(0.5*rnorm(10),-rnorm(10),2*rnorm(10)))
#data.simulated$y =
data.simulated$y = 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.4*rnorm(20)
data.simulated <- as.data.frame(cbind(rnorm(20),rnorm(20),rnorm(20)))
data.simulated$y = 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.4*rnorm(20)
data.simulated$y
data.simulated$y>0
as.numeric(data.simulated$y>0)
data.simulated <- as.data.frame(cbind(rnorm(20),rnorm(20),rnorm(20)))
data.simulated$y = 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.4*rnorm(20)
data.simulated$y <- as.numeric(data.simulated$y>0)
glm(y~V1+V2+V3,family=binomial)
glm(y~V1+V2+V3,data=data.simulated,family=binomial)
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.1*rnorm(100)
data.simulated$y <- as.numeric(data.simulated$y>0)
glm(y~V1+V2+V3,data=data.simulated,family=binomial)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
help(binomial)
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- as.numeric(data.simulated$y>0)
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- as.numeric(data.simulated$y>0)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- as.numeric(data.simulated$y>0.2)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
mean(data.simulated$y)
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~.,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
logit.fitted <- glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
summary(logit.fitted)
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
logit.fitted <- glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
summary(logit.fitted)
logit.fitted <- glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
summary(logit.fitted)
data.simulated <- as.data.frame(cbind(rnorm(1000),rnorm(1000),rnorm(1000)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
logit.fitted <- glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
summary(logit.fitted)
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.5*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
logit.fitted <- glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
summary(logit.fitted)
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.3*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
logit.fitted <- glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
summary(logit.fitted)
summary(glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit')))
predict(logit.fitted,cbind(rnorm(100),rnorm(100),rnorm(100)))
predict(logit.fitted,as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100))))
predict(logit.fitted,as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100))))
predict(logit.fitted,as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100))),type='response')
test.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
test.y <- 0.2 + 0.5*test.simulate$V1 - 0.3*test.simulate$V2 + 0.3*rnorm(100)
test.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
test.y <- 0.2 + 0.5*test.simulated$V1 - 0.3*test.simulated$V2 + 0.3*rnorm(100)
test.y.predicted <- predict(logit.fitted,test.simulated,type='response')
plot(test.y,test.y.predicted)
test.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
test.y <- 0.2 + 0.5*test.simulated$V1 - 0.3*test.simulated$V2 + 0.3*rnorm(100)
test.y.prob <- 1/(1+exp(-test.y))
test.y.predicted <- predict(logit.fitted,test.simulated,type='response')
plot(test.y.prob,test.y.predicted)
plot(test.y.prob,test.y.predicted)
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.1*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
logit.fitted <- glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
summary(logit.fitted)
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.3*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.numeric(data.simulated$y>0.5)
logit.fitted <- glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
summary(logit.fitted)
test.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
test.y <- 0.2 + 0.5*test.simulated$V1 - 0.3*test.simulated$V2 + 0.3*rnorm(100)
test.y.prob <- 1/(1+exp(-test.y))
test.y.predicted <- predict(logit.fitted,test.simulated,type='response')
plot(test.y.prob,test.y.predicted)
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.3*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.factor(as.numeric(data.simulated$y>0.5))
logit.fitted <- glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
summary(logit.fitted)
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.3*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.factor(data.simulated$y>0.5)
logit.fitted <- glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
summary(logit.fitted)
data.simulated$y
data.simulated$y <- as.numeric(data.simulated$y)
logit.fitted <- glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
logit.fitted
data.simulated$y
data.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
data.simulated$y = 0.2 + 0.5*data.simulated$V1 - 0.3*data.simulated$V2 + 0.3*rnorm(100)
data.simulated$y <- 1/(1+exp(-data.simulated$y))
data.simulated$y <- as.factor(data.simulated$y>0.5)
logit.fitted <- glm(y~V1+V2+V3,data=data.simulated,family=binomial(link='logit'))
summary(logit.fitted)
test.simulated <- as.data.frame(cbind(rnorm(100),rnorm(100),rnorm(100)))
test.y <- 0.2 + 0.5*test.simulated$V1 - 0.3*test.simulated$V2 + 0.3*rnorm(100)
test.y.prob <- 1/(1+exp(-test.y))
test.y.predicted <- predict(logit.fitted,test.simulated,type='response')
plot(test.y.prob,test.y.predicted)
library(randomForest)
help("randomForest")
iris
model = randomForest(iris.type ~ sepal.length + sepal.width,
data = iris,
sampsize=c(10,10,10), strata=iris$iris.type)
colnames(iris)
model = randomForest(Species ~ Sepal.Length + Sepal.Width,
data = iris,
sampsize=c(10,10,10), strata=Species)
model = randomForest(Species ~ Sepal.Length + Sepal.Width,
data = iris,
sampsize=c(10,10,10), strata=iris$Species)
length(iris)
nrow(iris)
nrow(iris)
nrow(iris)/3
ceiling(nrow(iris)/3)
rep(ceiling(nrow(iris)/3),max(iris$Species))
max(iris$Species)
levels(iris$Species)
length(levels(iris$Species))
rep(ceiling(nrow(iris)/3),length(levels(iris$Species)))
sample.size <- rep(ceiling(nrow(iris)/3),length(levels(iris$Species)))
model = randomForest(Species ~ Sepal.Length + Sepal.Width,
data = iris,
sampsize=sample.size, strata=iris$Species)
model
model$votes
n.species <- length(levels(iris$Species))
sample.size <- rep(ceiling(nrow(iris)/n.species),n.species)
model = randomForest(Species ~ Sepal.Length + Sepal.Width,
data = iris,
sampsize=sample.size, strata=iris$Species)
help(model)
model$type
model$oob.times
model$classes
model$forest
model$forest$treemap
class(model$forest$treemap)
print(model)
model$inbag
n.species <- length(levels(iris$Species))
sample.size <- rep(ceiling(nrow(iris)/n.species),n.species)
model <- randomForest(Species ~ Sepal.Length + Sepal.Width,
data = iris,
sampsize=sample.size, strata=iris$Species)
model$inbag
n.species <- length(levels(iris$Species))
sample.size <- rep(ceiling(nrow(iris)/n.species),n.species)
model <- randomForest(Species ~ Sepal.Length + Sepal.Width,
data = iris,keep.inbag = TRUE,
sampsize=sample.size, strata=iris$Species)
model$inbag
dim(model$inbag)
table(model$inbag)
table(t(model$inbag))
model$inbag[1,]
model$inbag[,1]
iris$Species
table(iris$Species)
library(randomForest)
n.species <- length(levels(iris$Species))
sample.size <- rep(ceiling(nrow(iris)/n.species),n.species)
model <- randomForest(Species ~ Sepal.Length + Sepal.Width,
data = iris,keep.inbag = TRUE,
sampsize=sample.size, strata=iris$Species)
colnames(iris)
library(randomForest)
n.species <- length(levels(iris$Species))
sample.size <- rep(ceiling(nrow(iris)/n.species),n.species)
rf.fitted <- randomForest(Species ~ Sepal.Length + Sepal.Width + Petal.Length +Petal.Width, data = iris,keep.inbag = TRUE,sampsize=sample.size, strata=iris$Species)
rf.fitted$inbag
rf.fitted$inbag[,2]
iris
which(iris$Species=="virginica")
iris[-which(iris$Species=="virginica")[1:40],]
iris[-which(iris$Species=="virginica")[1:45],]
iris[-which(iris$Species=="virginica")[1:40],]
library(randomForest)
n.species <- length(levels(iris$Species))
iris.imbalanced <- iris[-which(iris$Species=="virginica")[1:40],]
sample.size <- rep(ceiling(nrow(iris.imbalanced)/n.species),n.species)
rf.fitted.balanced <- randomForest(Species ~ Sepal.Length + Sepal.Width + Petal.Length +Petal.Width, data = iris.imbalanced,keep.inbag = TRUE,sampsize=sample.size, strata=iris$Species)
rf.fitted <- randomForest(Species ~ Sepal.Length + Sepal.Width + Petal.Length +Petal.Width, data = iris.imbalanced,keep.inbag = TRUE)
rf.fitted.balanced$inbag
library(dplyr)
rf.fitted$inbag
as.data.frame(rf.fitted$inbag)
library(dplyr)
inbag.samples <- as.data.frame(rf.fitted$inbag)
inbag.samples %>% group_by(iris.imbalanced$Species) %>% sum()
sum(inbag.samples,1)
sum(inbag.samples,2)
sum(inbag.samples)
inbag.samples
sum(rf.fitted$inbag,2)
dim(rf.fitted$inbag)
sum(rf.fitted$inbag)
help(sum)
colSums(rf.fitted$inbag)
length(colSums(rf.fitted$inbag))
rowSums(rf.fitted$inbag)
aggregate(rowSums(rf.fitted$inbag),by=iris$Species)
aggregate(rowSums(rf.fitted$inbag),by=iris$Species,FUN=sum)
aggregate(rowSums(rf.fitted$inbag),by=list(iris$Species),FUN=sum)
aggregate(rowSums(rf.fitted$inbag),by=list(iris.imbalanced$Species),FUN=sum)
aggregate(rowSums(rf.fitted.balanced$inbag),by=list(iris.imbalanced$Species),FUN=sum)
library(randomForest)
n.species <- length(levels(iris$Species))
iris.imbalanced <- iris[-which(iris$Species=="virginica")[1:40],]
rf.fitted <- randomForest(Species ~ Sepal.Length + Sepal.Width + Petal.Length +Petal.Width, data = iris.imbalanced,keep.inbag = TRUE)
aggregate(rowSums(rf.fitted$inbag),by=list(iris$Species),FUN=sum)
library(randomForest)
n.species <- length(levels(iris$Species))
iris.imbalanced <- iris[-which(iris$Species=="virginica")[1:40],]
rf.fitted <- randomForest(Species ~ Sepal.Length + Sepal.Width + Petal.Length +Petal.Width, data = iris.imbalanced,keep.inbag = TRUE)
aggregate(rowSums(rf.fitted$inbag),by=list(iris.imbalanced$Species),FUN=sum)
sample.size <- rep(ceiling(nrow(iris.imbalanced)/n.species),n.species)
rf.fitted.balanced <- randomForest(Species ~ Sepal.Length + Sepal.Width + Petal.Length +Petal.Width, data = iris.imbalanced,keep.inbag = TRUE,sampsize=sample.size, strata=iris$Species)
aggregate(rowSums(rf.fitted.balanced$inbag),by=list(iris.imbalanced$Species),FUN=sum)
